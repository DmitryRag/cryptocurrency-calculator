{"version":3,"sources":["date.js","App.js","index.js"],"names":["todayDate","Date","currYear","getFullYear","currMonth","getMonth","currDay","getDate","today","App","buyday","amountprice","useState","coinName","setCoinName","dateBuy","setDateBuy","dateSell","setDateSell","coinBuyRub","setCoinBuyRub","coinBuyUsd","setCoinBuyUsd","coinBuyEur","setCoinBuyEur","coinSellRub","setCoinSellRub","coinSellUsd","setCoinSellUsd","coinSellEur","setCoinSellEur","currencyChoice","setCurrencyChoice","prefix","setPrefix","moneyBuy","setMoneyBuy","profit","setProfit","showProfit","setShowProfite","coinNameValidity","setCoinNameValidity","dateBuyValidity","setDateBuyValidity","dateSellValidity","setDateSellValidity","currencyChoiceValidity","setCurrencyChoiceValidity","moneyBuyValidity","setMoneyBuyValidity","errBuyFirst","setErrBuyFirst","errBuySecond","setErrBuySecond","errSellFirst","setErrSellFirst","errSellSecond","setErrSellSecond","errorDateBuy","setErrorDateBuy","disabledButtonTotal","cryptocurrency","toLowerCase","replace","Intl","NumberFormat","format","parseFloat","toFixed","getBuyPrice","a","axios","get","then","res","data","market_data","current_price","rub","usd","eur","catch","error","console","log","getSellPrice","useEffect","className","name","type","placeholder","value","onChange","e","target","validity","valid","required","selected","disabled","hidden","mask","autoComplete","pattern","firstValue","split","secondValue","thirdValue","firstDate","secondDate","thirdDate","setFullYear","unvalid","onClick","preventDefault","thousandsGroupStyle","decimalSeparator","displayType","thousandSeparator","allowNegative","money","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edbae504.chunk.js","sourcesContent":["\nvar todayDate = new Date()\nvar currYear = todayDate.getFullYear()\nvar currMonth = todayDate.getMonth()+1\nvar currDay = todayDate.getDate()\nif (currMonth <= 9) {\n    currMonth = '0' + currMonth\n}\nif (currDay <= 9) {\n    currDay = '0' + currDay\n}\n\nexport var today = (currDay + '-' + currMonth + '-' + currYear)","import React, {useState, useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport axios from 'axios'\nimport {today} from '../src/date'\nimport './App.css'\n\nfunction App() {\n    const [coinName, setCoinName] = useState('') // название крипты\n    const [dateBuy, setDateBuy] = useState('') // дата покупки\n    const [dateSell, setDateSell] = useState('') // дата продажи\n    const [coinBuyRub, setCoinBuyRub] = useState(0) // цена покупки\n    const [coinBuyUsd, setCoinBuyUsd] = useState(0) \n    const [coinBuyEur, setCoinBuyEur] = useState(0) \n    const [coinSellRub, setCoinSellRub] = useState(0) // цена продажи\n    const [coinSellUsd, setCoinSellUsd] = useState(0)\n    const [coinSellEur, setCoinSellEur] = useState(0)\n    const [currencyChoice, setCurrencyChoice] = useState('') // выбор валюты\n    const [prefix, setPrefix] = useState('') // эмблемка валюты\n    const [moneyBuy, setMoneyBuy] = useState('') // сумма покупки\n    const [profit, setProfit] = useState(0) // профит денег\n    const [showProfit, setShowProfite] = useState(false) // показать блок подсчета выбранной валюты\n\n    const [coinNameValidity, setCoinNameValidity] = useState(false) // валидность выбора крипты\n    const [dateBuyValidity, setDateBuyValidity] = useState(false) // дата покупки\n    const [dateSellValidity, setDateSellValidity] = useState(false) // дата продажи\n    const [currencyChoiceValidity, setCurrencyChoiceValidity] = useState(false)\n    const [moneyBuyValidity, setMoneyBuyValidity] = useState(false) // сумма покупки\n\n    const [errBuyFirst, setErrBuyFirst] = useState(true) // валидность от запроса цены покупки\n    const [errBuySecond, setErrBuySecond] = useState(true) // валидность от запроса цены покупки\n    const [errSellFirst, setErrSellFirst] = useState(true) // валидность от запроса цены покупки\n    const [errSellSecond, setErrSellSecond] = useState(true) // валидность от запроса цены покупки\n    const [errorDateBuy, setErrorDateBuy] = useState(0) // такой даты покупки нету в бд\n\n    const disabledButtonTotal = !coinNameValidity || !dateBuyValidity || !dateSellValidity || !moneyBuyValidity // профит кнопка\n\n\n    var cryptocurrency = coinName.toLowerCase().replace( /\\s/g, '-')\n\n    var buyday\n    if (coinName === 'bitcoin') {\n        buyday = '28-04-2013'\n    } if (coinName === 'ethereum') {\n        buyday = '07-08-2015'\n    } if (coinName === 'ripple') {\n        buyday = '04-08-2013'\n    } if (coinName === 'tether') {\n        buyday = '02-03-2015'\n    } if (coinName === 'dogecoin') {\n        buyday = '15-12-2013'\n    }\n\n    var amountprice\n    if (profit <= 10) {\n        amountprice = new Intl.NumberFormat('ru-RU').format(parseFloat(profit).toFixed(2))\n    } else {\n        amountprice = new Intl.NumberFormat('ru-RU').format(parseFloat(profit).toFixed(0))\n    }\n\n    const getBuyPrice = async () => {\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${cryptocurrency}/history?date=${dateBuy}`)\n        .then(res => {\n            setCoinBuyRub(res.data.market_data.current_price.rub)\n            setCoinBuyUsd(res.data.market_data.current_price.usd)\n            setCoinBuyEur(res.data.market_data.current_price.eur)\n        })\n        .catch(error => {\n            setErrorDateBuy(0.0000001)\n            console.log('ошибка даты покупки')\n        })\n    }\n\n    const getSellPrice = async () => {\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${cryptocurrency}/history?date=${dateSell}`)\n        .then(res => {\n            setCoinSellRub(res.data.market_data.current_price.rub)\n            setCoinSellUsd(res.data.market_data.current_price.usd)\n            setCoinSellEur(res.data.market_data.current_price.eur)\n        })\n        .catch(error => console.log('ошибка даты продажи'))\n    }\n\n    useEffect(() => {\n        getBuyPrice()\n    }, [dateBuy, coinName])\n\n    useEffect(() => {\n        getSellPrice()\n        if (errorDateBuy > coinBuyRub) {\n            setErrBuySecond(false)\n            setDateBuyValidity(false)\n            setDateSell('')\n        } else {\n            setErrorDateBuy(0)\n        }\n    }, [dateSell])\n\n    function handleChangeCoinName(e) {\n        setCoinName(e.target.value)\n        setCoinNameValidity(e.target.validity.valid)\n    }\n\n    function handleChangeDateBuy(e) {\n        setDateBuy(e.target.value)\n        setDateBuyValidity(e.target.validity.valid)\n    }\n    \n    function handleChangeDateSell(e) {\n        var firstValue = dateBuy.split('-')\n        var secondValue = buyday.split('-')\n        var thirdValue = today.split('-')\n        var firstDate=new Date()\n        var secondDate=new Date()\n        var thirdDate=new Date()\n        firstDate.setFullYear(firstValue[2],(firstValue[1] - 1 ),firstValue[0])\n        secondDate.setFullYear(secondValue[2],(secondValue[1] - 1 ),secondValue[0])\n        thirdDate.setFullYear(thirdValue[2],(thirdValue[1] - 1 ),thirdValue[0])\n        if (firstDate < secondDate)\n        {\n            setErrBuyFirst(false)\n            setErrBuySecond(true)\n            setDateBuyValidity(false)\n            setDateSellValidity(e.target.validity.unvalid)\n        } else if (firstDate > thirdDate) {\n            setErrBuySecond(false)\n            setErrBuyFirst(true)\n            setDateBuyValidity(false)\n            setDateSellValidity(e.target.validity.unvalid)\n        } else {\n            setDateSell(e.target.value)\n            setErrBuyFirst(true)\n            setErrBuySecond(true)\n            setDateSellValidity(e.target.validity.valid)\n\n        }\n    }\n\n    function handleDateSell(e) {\n        e.preventDefault()\n\n        var firstValue = dateBuy.split('-')\n        var secondValue = buyday.split('-')\n        var thirdValue = today.split('-')\n        var firstDate=new Date()\n        var secondDate=new Date()\n        var thirdDate=new Date()\n        firstDate.setFullYear(firstValue[2],(firstValue[1] - 1 ),firstValue[0])\n        secondDate.setFullYear(secondValue[2],(secondValue[1] - 1 ),secondValue[0])\n        thirdDate.setFullYear(thirdValue[2],(thirdValue[1] - 1 ),thirdValue[0])\n        if (firstDate < secondDate)\n        {\n            setErrBuyFirst(false)\n            setErrBuySecond(true)\n            setDateBuyValidity(false)\n            setDateSellValidity(e.target.validity.unvalid)\n        } else if (firstDate > thirdDate) {\n            setErrBuySecond(false)\n            setErrBuyFirst(true)\n            setDateBuyValidity(false)\n            setDateSellValidity(e.target.validity.unvalid)\n        } else {\n            setDateSell(today)\n            setDateSellValidity(e.target.validity.valid)\n            setErrBuyFirst(true)\n            setErrBuySecond(true)\n        }\n    }\n\n    function handleCurrencyChoice(e) {\n        e.preventDefault()\n\n        var firstValue = dateBuy.split('-')\n        var secondValue = dateSell.split('-')\n        var thirdValue = today.split('-')\n        var firstDate=new Date()\n        var secondDate=new Date()\n        var thirdDate=new Date()\n        firstDate.setFullYear(firstValue[2],(firstValue[1] - 1 ),firstValue[0])\n        secondDate.setFullYear(secondValue[2],(secondValue[1] - 1 ),secondValue[0])\n        thirdDate.setFullYear(thirdValue[2],(thirdValue[1] - 1 ),thirdValue[0])\n        if (firstDate >= secondDate)\n        {\n            setCurrencyChoice('')\n            setCurrencyChoiceValidity(e.target.validity.unvalid)\n            setDateSellValidity(false)\n            setErrSellFirst(false)\n            setErrSellSecond(true)\n        } else if (secondDate > thirdDate) {\n            setCurrencyChoice('')\n            setCurrencyChoiceValidity(e.target.validity.unvalid)\n            setDateSellValidity(false)\n            setErrSellSecond(false)\n            setErrSellFirst(true)\n        } else {\n            setCurrencyChoice(e.target.value)\n            setCurrencyChoiceValidity(e.target.validity.valid)\n            setDateSellValidity(true)\n            setErrSellFirst(true)\n            setErrSellSecond(true)\n        }\n    }\n\n    function handleMoneyBuy(e) {\n        setMoneyBuy(e.target.value)\n        setMoneyBuyValidity(e.target.validity.valid)\n        if (currencyChoice === 'usd') {\n            setPrefix('$')\n        } else if (currencyChoice === 'eur') {\n            setPrefix('€')\n        } else {\n            setPrefix('₽')\n        }\n    }\n\n    function handleProfit(e) {\n        e.preventDefault()\n        var money = Number(moneyBuy.replace(/[^0-9]/g,\"\"))\n        if (currencyChoice === 'rub') {\n            setProfit((money / coinBuyRub) * coinSellRub)\n        } else if (currencyChoice === 'usd') {\n            setProfit((money / coinBuyUsd) * coinSellUsd)\n        } else {\n            setProfit((money / coinBuyEur) * coinSellEur)\n        }\n        setShowProfite(true)\n    }\n\n    function resetForm(e) {\n        e.preventDefault()\n        \n        setCoinName('')\n        setDateBuy('')\n        setDateSell('')\n        setCoinBuyRub(0)\n        setCoinBuyUsd(0)\n        setCoinBuyEur(0)\n        setCoinSellRub(0)\n        setCoinSellUsd(0)\n        setCoinSellEur(0)\n        setMoneyBuy('')\n        setCurrencyChoice('')\n        setShowProfite(false)\n        setCoinNameValidity(false)\n        setDateBuyValidity(false)\n        setDateSellValidity(false)\n        setMoneyBuyValidity(false)\n        setCurrencyChoiceValidity(false)\n        setErrorDateBuy(0)\n        setErrBuyFirst(true)\n        setErrBuySecond(true)\n        setErrSellFirst(true)\n        setErrSellSecond(true)\n    }\n\n    return (\n        <div className='container'>\n            <h1>Crypto Calculator</h1>\n            <form className='calculator__container'>\n                <div className='calculator__field'>\n                    <select\n                        className='cruptocurrency__name'\n                        name='coinname' \n                        type='text'\n                        placeholder='выберете криптовалюту'\n                        value={coinName}\n                        onChange={handleChangeCoinName}\n                        required\n                    >\n                        <option className='cruptocurrency__name-option' value='' selected disabled hidden>выберете криптовалюту</option>\n                        <option value='bitcoin'>Bitcoin</option>\n                        <option value='ethereum'>Ethereum</option>\n                        <option value='dogecoin'>Dogecoin</option>\n                        <option value='ripple'>Ripple</option>\n                        <option value='tether'>Tether</option>\n                    </select>\n                </div>\n                <div className='calculator__field-date'>\n                    <NumberFormat\n                        className='cruptocurrency__input'\n                        name='buydate'\n                        type='text'\n                        format='##-##-####'\n                        mask={['_', '_', '_', '_', '_', '_', '_', '_']}\n                        placeholder='дата покупки'\n                        autoComplete='off'\n                        value={dateBuy}\n                        disabled={!coinName}\n                        onChange={handleChangeDateBuy}\n                        pattern='(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d'\n                    />\n                </div>\n                {!errBuyFirst && <span className='error__date-buy'>выберете дату не ранее {buyday}</span>}\n                {!errBuySecond && <span className='error__date-buy'>выберете дату не позднее сегодня {today}</span>}\n                <div className='calculator__field-date'>\n                    <NumberFormat \n                        className='cruptocurrency__input'\n                        name='selldate'\n                        type='text'\n                        format='##-##-####'\n                        mask={['_', '_', '_', '_', '_', '_', '_', '_']}\n                        placeholder='дата продажи'\n                        autoComplete='off'\n                        value={dateSell}\n                        disabled={!dateBuyValidity}\n                        onChange={handleChangeDateSell}\n                        pattern='(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d'\n                    />\n                    <button\n                        className={`btn__calculator ${!dateBuyValidity ? 'btn_disabled' : ''}`}\n                        disabled={!dateBuyValidity}\n                        onClick={handleDateSell}\n                    >сегодня</button>\n                </div>\n                {!errSellFirst && <span className='error__date-buy'>дата продажи не может быть меньше или равна дате покупки</span>}\n                {!errSellSecond && <span className='error__date-buy'>дата продажи не может быть больше {today}</span>}\n                <div className='calculator__field'>\n                    <select\n                        className='cruptocurrency__currency-name'\n                        name='currency' \n                        type='text'\n                        placeholder='выберете валюту покупки'\n                        value={currencyChoice}\n                        disabled={!dateSellValidity}\n                        onChange={handleCurrencyChoice}\n                        required\n                    >\n                        <option className='cruptocurrency__name-option' value='' selected disabled hidden>выберете валюту покупки</option>\n                        <option value='rub'>Рубли</option>\n                        <option value='usd'>Доллары</option>\n                        <option value='eur'>Евро</option>\n                    </select>\n                </div>\n                <div className='calculator__field'>\n                    <NumberFormat\n                        className='cruptocurrency__input'\n                        thousandsGroupStyle=\"thousand\"\n                        decimalSeparator=\"\"\n                        displayType=\"input\"\n                        type=\"text\"\n                        thousandSeparator={true}\n                        prefix={prefix}\n                        allowNegative={true} \n                        placeholder='сумма покупки'\n                        autoComplete='off'             \n                        value={moneyBuy}\n                        disabled={!currencyChoiceValidity}\n                        onChange={handleMoneyBuy}\n                    />\n                </div>\n                <button\n                    className={`btn__calculator_big ${disabledButtonTotal ? 'btn_disabled' : ''}`}\n                    onClick={handleProfit}\n                    disabled={disabledButtonTotal}\n                >посчитать</button>\n                <button\n                    className={`btn__calculator_big ${!coinName ? 'btn_disabled' : ''}`}\n                    onClick={resetForm}\n                    disabled={!coinName}\n                >обнулить все</button>\n                {showProfit? \n                    <div className='calculator__container_rub'>\n                        <p className='calculator__total'>Сейчас было бы: {amountprice}{prefix}</p>  \n                    </div>\n                :null}\n            </form>\n        </div>   \n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}