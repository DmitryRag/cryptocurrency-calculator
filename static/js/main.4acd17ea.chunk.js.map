{"version":3,"sources":["date.js","App.js","index.js"],"names":["todayDate","Date","currYear","getFullYear","currMonth","getMonth","currDay","getDate","today","App","buyday","useState","coinName","setCoinName","dateBuy","setDateBuy","dateSell","setDateSell","coinBuyRub","setCoinBuyRub","coinBuyUsd","setCoinBuyUsd","coinBuyEur","setCoinBuyEur","coinSellRub","setCoinSellRub","coinSellUsd","setCoinSellUsd","coinSellEur","setCoinSellEur","moneyBuy","setMoneyBuy","profit","setProfit","prefix","setPrefix","currencyChoice","setCurrencyChoice","showProfit","setShowProfite","coinNameValidity","setCoinNameValidity","dateBuyValidity","setDateBuyValidity","dateSellValidity","setDateSellValidity","currencyChoiceValidity","setCurrencyChoiceValidity","moneyBuyValidity","setMoneyBuyValidity","dateBuyValid","setDateBuyValid","errorDateBuy","setErrorDateBuy","errorDateSell","setErrorDateSell","isDisabledButtonBuy","isDisabledButtonSell","isDisabledButtonTotal","cryptocurrency","toLowerCase","replace","amountprice","getBuyPrice","a","axios","get","then","res","data","market_data","current_price","rub","usd","eur","catch","error","getSellPrice","console","log","useEffect","Intl","NumberFormat","format","parseFloat","toFixed","className","name","type","placeholder","value","onChange","e","target","validity","valid","required","selected","disabled","hidden","mask","autoComplete","pattern","onClick","preventDefault","firstValue","split","secondValue","firstDate","secondDate","setFullYear","unvalid","thousandsGroupStyle","decimalSeparator","displayType","thousandSeparator","allowNegative","money","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4acd17ea.chunk.js","sourcesContent":["\nvar todayDate = new Date()\nvar currYear = todayDate.getFullYear()\nvar currMonth = todayDate.getMonth()+1\nvar currDay = todayDate.getDate()-1\nif (currMonth <= 9) {\n    currMonth = '0' + currMonth\n}\nif (currDay <= 9) {\n    currDay = '0' + currDay\n}\n\nexport var today = (currDay + '-' + currMonth + '-' + currYear)","import React, { useState, useEffect } from 'react'\nimport NumberFormat from 'react-number-format'\nimport axios from 'axios'\nimport { today } from '../src/date'\nimport './App.css'\n\nfunction App() {\n    const [coinName, setCoinName] = useState('') // название крипты\n    const [dateBuy, setDateBuy] = useState('') // дата покупки\n    const [dateSell, setDateSell] = useState('') // дата продажи\n\n    const [coinBuyRub, setCoinBuyRub] = useState(0) // цена покупки\n    const [coinBuyUsd, setCoinBuyUsd] = useState(0) \n    const [coinBuyEur, setCoinBuyEur] = useState(0) \n    const [coinSellRub, setCoinSellRub] = useState(0) // цена продажи\n    const [coinSellUsd, setCoinSellUsd] = useState(0)\n    const [coinSellEur, setCoinSellEur] = useState(0)\n\n    const [moneyBuy, setMoneyBuy] = useState('') // сумма покупки\n    const [profit, setProfit] = useState(0) // профит денег\n    const [prefix, setPrefix] = useState('')\n\n    const [currencyChoice, setCurrencyChoice] = useState('') // выбор валюты\n    const [showProfit, setShowProfite] = useState(false) // показать блок подсчета выбранной валюты\n\n    const [coinNameValidity, setCoinNameValidity] = useState(false) // выбор крипты\n    const [dateBuyValidity, setDateBuyValidity] = useState(false) // дата покупки\n    const [dateSellValidity, setDateSellValidity] = useState(false) // дата продажи\n    const [currencyChoiceValidity, setCurrencyChoiceValidity] = useState(false)\n    const [moneyBuyValidity, setMoneyBuyValidity] = useState(false) // сумма покупки\n    const [dateBuyValid, setDateBuyValid] = useState(true) // валидность от запроса цены покупки\n    const [errorDateBuy, setErrorDateBuy] = useState(0) // такой даты покупки нету в бд\n    const [errorDateSell, setErrorDateSell] = useState(true) // дата покупки больше даты продажи\n\n    const isDisabledButtonBuy = !coinNameValidity // валидность для кнопки даты покупки\n    const isDisabledButtonSell = !coinNameValidity || !dateBuyValidity // валидность для кнопки даты продажи\n    const isDisabledButtonTotal = !coinNameValidity || !dateBuyValidity || !dateSellValidity || !moneyBuyValidity // профит кнопка\n\n    var cryptocurrency = coinName.toLowerCase().replace( /\\s/g, '-')\n\n\n    var buyday\n    if (coinName === 'bitcoin') {\n        buyday = '28-04-2013'\n    } if (coinName === 'ethereum') {\n        buyday = '07-08-2015'\n    } if (coinName === 'ripple') {\n        buyday = '04-08-2013'\n    } if (coinName === 'tether') {\n        buyday = '02-03-2015'\n    } if (coinName === 'dogecoin') {\n        buyday = '15-12-2013'\n    }\n\n    const getBuyPrice = async () => {\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${cryptocurrency}/history?date=${dateBuy}`)\n        .then(res => {\n            setCoinBuyRub(res.data.market_data.current_price.rub)\n            setCoinBuyUsd(res.data.market_data.current_price.usd)\n            setCoinBuyEur(res.data.market_data.current_price.eur)\n        })\n        .catch(error => {\n            setErrorDateBuy(0.0000001)\n        })\n    }\n\n    const getSellPrice = async () => {\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${cryptocurrency}/history?date=${dateSell}`)\n        .then(res => {\n            setCoinSellRub(res.data.market_data.current_price.rub)\n            setCoinSellUsd(res.data.market_data.current_price.usd)\n            setCoinSellEur(res.data.market_data.current_price.eur)\n        })\n        .catch(error => console.log(error))\n    }\n\n    useEffect(() => {\n        getBuyPrice()\n    }, [dateBuy, coinName])\n\n    useEffect(() => {\n        getSellPrice()\n    }, [coinName])\n\n    useEffect(() => {\n        getSellPrice()\n        if (errorDateBuy > coinBuyRub) {\n            setDateBuyValid(false)\n            setDateBuyValidity(false)\n            setDateSell('')\n        } else {\n            setErrorDateBuy(0)   \n        }\n    }, [dateSell])\n\n\n\n    function handleChangeCoinName(e) {\n        setCoinName(e.target.value)\n        setCoinNameValidity(e.target.validity.valid)\n    }\n\n    function handleChangeDateBuy(e) {\n        setDateBuy(e.target.value)\n        setDateBuyValidity(e.target.validity.valid)\n    }\n    \n    function handleChangeDateSell(e) {\n        setDateSell(e.target.value)\n        setDateSellValidity(e.target.validity.valid)\n    }\n\n    function handleDateBuy(e) {\n        e.preventDefault()\n        setDateBuyValidity(e.target.validity.valid)\n        setDateBuy(buyday)\n    }\n\n    function handleDateSell(e) {\n        e.preventDefault()\n        setDateSellValidity(e.target.validity.valid)\n        setDateSell(today)\n    }\n\n    function handleCurrencyChoice(e) {\n        e.preventDefault()\n        setCurrencyChoice(e.target.value)\n\n        var firstValue = dateBuy.split('-')\n        var secondValue = dateSell.split('-')\n        var firstDate=new Date()\n        var secondDate=new Date()\n        firstDate.setFullYear(firstValue[0],(firstValue[1] - 1 ),firstValue[2])\n        secondDate.setFullYear(secondValue[0],(secondValue[1] - 1 ),secondValue[2])\n\n        if (firstDate > secondDate)\n        {\n            setCurrencyChoice('')\n            setCurrencyChoiceValidity(e.target.validity.unvalid)\n            setDateSellValidity(false)\n            setErrorDateSell(false)\n        } else {\n            setErrorDateSell(true)\n            setCurrencyChoiceValidity(e.target.validity.valid)\n        }\n    }\n\n    function handleMoneyBuy(e) {\n        setMoneyBuy(e.target.value)\n        setMoneyBuyValidity(e.target.validity.valid)\n        if (currencyChoice === 'usd') {\n            setPrefix('$')\n        } else if (currencyChoice === 'eur') {\n            setPrefix('€')\n        } else {\n            setPrefix('₽')\n        }\n    }\n\n    function handleProfit(e) {\n        e.preventDefault()\n        var money = Number(moneyBuy.replace(/[^0-9]/g,\"\"))\n        if (currencyChoice === 'rub') {\n            setProfit((money / coinBuyRub) * coinSellRub)\n        } else if (currencyChoice === 'usd') {\n            setProfit((money / coinBuyUsd) * coinSellUsd)\n        } else {\n            setProfit((money / coinBuyEur) * coinSellEur)\n        }\n        setShowProfite(true)\n    }\n\n    var amountprice\n    if (profit <= 10) {\n        amountprice = new Intl.NumberFormat('ru-RU').format(parseFloat(profit).toFixed(2))\n    } else {\n        amountprice = new Intl.NumberFormat('ru-RU').format(parseFloat(profit).toFixed(0))\n    }\n\n    function resetForm(e) {\n        e.preventDefault()\n        setCoinName('')\n        setDateBuy('')\n        setDateSell('')\n        setCoinBuyRub(0)\n        setCoinBuyUsd(0)\n        setCoinBuyEur(0)\n        setCoinSellRub(0)\n        setCoinSellUsd(0)\n        setCoinSellEur(0)\n        setMoneyBuy('')\n        setCurrencyChoice('')\n        setShowProfite(false)\n        setCoinNameValidity(false)\n        setDateBuyValidity(false)\n        setDateSellValidity(false)\n        setMoneyBuyValidity(false)\n        setCurrencyChoiceValidity(false)\n        setErrorDateBuy(0)\n        setDateBuyValid(true)\n        setErrorDateSell(true)\n    }\n\n    return (\n        <div className='container'>\n            <h1>Crypto Calculator</h1>\n            <form className='calculator__container'>\n                <div className='calculator__field'>\n                    <select\n                        className={`cruptocurrency__name  ${isDisabledButtonBuy ? 'disabled' : 'valid'}`}\n                        name='coinname' \n                        type='text'\n                        placeholder='выберете криптовалюту'\n                        value={coinName}\n                        onChange={handleChangeCoinName}\n                        required\n                    >\n                        <option className='cruptocurrency__name-option' value='' selected disabled hidden>выберете криптовалюту</option>\n                        <option value='bitcoin'>Bitcoin</option>\n                        <option value='ethereum'>Ethereum</option>\n                        <option value='dogecoin'>Dogecoin</option>\n                        <option value='ripple'>Ripple</option>\n                        <option value='tether'>Tether</option>\n                    </select>\n                </div>\n                <div className='calculator__field-date'>\n                    <NumberFormat\n                        className={`cruptocurrency__input ${isDisabledButtonBuy ? 'disabled' : 'valid'}`}\n                        name='buydate'\n                        type='text'\n                        format='##-##-####'\n                        mask={['_', '_', '_', '_', '_', '_', '_', '_']}\n                        placeholder='дата покупки'\n                        autoComplete='off'\n                        value={dateBuy}\n                        disabled={!coinName}\n                        onChange={handleChangeDateBuy}\n                        pattern='(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d'\n                    />\n                    <button \n                        className={`btn__calculator ${isDisabledButtonBuy ? 'btn_disabled' : ''}`}\n                        onClick={handleDateBuy}\n                        disabled={!coinName}\n                    >первый день</button>\n                </div>\n                {!dateBuyValid && <span className='error__date-buy'>такой даты нету в базе, нажмите кнопку \"обнулить все\" и воспользуйтесь кнопкой \"первый день\"</span>}\n                <div className='calculator__field-date'>\n                    <NumberFormat \n                        className={`cruptocurrency__input ${isDisabledButtonSell ? 'disabled' : 'valid'}`}\n                        name='selldate'\n                        type='text'\n                        format='##-##-####'\n                        mask={['_', '_', '_', '_', '_', '_', '_', '_']}\n                        placeholder='дата продажи'\n                        autoComplete='off'\n                        value={dateSell}\n                        disabled={!dateBuyValidity}\n                        onChange={handleChangeDateSell}\n                        pattern='(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d'\n                    />\n                    <button\n                        className={`btn__calculator ${isDisabledButtonSell ? 'btn_disabled' : ''}`}\n                        disabled={isDisabledButtonSell}\n                        onClick={handleDateSell}\n                    >сегодня</button>\n                </div>\n                {!errorDateSell && <span className='error__date-buy'>дата продажи не может быть раньше, чем дата покупки</span>}\n                <div className='calculator__field'>\n                    <select\n                        className={`cruptocurrency__currency-name  ${isDisabledButtonSell ? 'disabled' : 'valid'}`}\n                        name='currency' \n                        type='text'\n                        placeholder='выберете валюту покупки'\n                        value={currencyChoice}\n                        disabled={!dateSellValidity}\n                        onChange={handleCurrencyChoice}\n                        required\n                    >\n                        <option className='cruptocurrency__name-option' value='' selected disabled hidden>выберете валюту покупки</option>\n                        <option value='rub'>Рубли</option>\n                        <option value='usd'>Доллары</option>\n                        <option value='eur'>Евро</option>\n                    </select>\n                </div>\n                <div className='calculator__field'>\n                    <NumberFormat\n                        className={`cruptocurrency__input ${!currencyChoiceValidity ? 'disabled' : 'valid'}`}\n                        thousandsGroupStyle=\"thousand\"\n                        decimalSeparator=\"\"\n                        displayType=\"input\"\n                        type=\"text\"\n                        thousandSeparator={true}\n                        prefix={prefix}\n                        allowNegative={true} \n                        placeholder='сумма покупки'\n                        autoComplete='off'             \n                        value={moneyBuy}\n                        disabled={!currencyChoiceValidity}\n                        onChange={handleMoneyBuy}\n                    />\n                </div>\n                <button\n                    className={`btn__calculator btn__calculator_big ${isDisabledButtonTotal ? 'btn_disabled' : ''}`}\n                    onClick={handleProfit}\n                    disabled={isDisabledButtonTotal}\n                >посчитать</button>\n                <button\n                    className={`btn__calculator btn__calculator_big ${!coinName ? 'btn_disabled' : ''}`}\n                    onClick={resetForm}\n                    disabled={!coinName}\n                >обнулить все</button>\n                {showProfit? \n                    <div className='calculator__container_rub'>\n                        <p className='calculator__total'>Сейчас было бы: {amountprice}{prefix}</p>  \n                    </div>\n                :null}\n            </form>\n        </div>   \n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}